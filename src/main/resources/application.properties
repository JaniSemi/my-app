# ??????????????????????????????????????????????????????????????
#  Perusasetukset
# ??????????????????????????????????????????????????????????????
server.port=${PORT:8080}

logging.level.org.atmosphere = warn
spring.mustache.check-template-location = false

# K‰ynnist‰ selain dev-tilassa
vaadin.launch-browser = true
# Vaadi, ett‰ vain n‰m‰ paketit skannataan hot-reloadissa
vaadin.allowed-packages = com.vaadin,org.vaadin,com.example.application

# mah≠dollistaa schema.sql / data.sql -alustuksen
spring.jpa.defer-datasource-initialization = true
spring.sql.init.mode = always

# ??????????????????????????????????????????????????????????????
#  H2 ? tiedostopohjainen tietokanta (data kulkee repossa mukana)
#    -> ./data/appdb.mv.db syntyy projektin juureen
# ??????????????????????????????????????????????????????????????
spring.datasource.url = jdbc:h2:file:./data/appdb;DB_CLOSE_DELAY=-1
spring.datasource.driver-class-name = org.h2.Driver
spring.datasource.username = sa          # H2-oletus
spring.datasource.password =             # tyhj‰ ? ok

# Hibernate antaa luoda / p‰ivitt‰‰ taulut automaattisesti
spring.jpa.hibernate.ddl-auto = update
# Poistaa ?Unable to determine Dialect? -varoituksen
spring.jpa.database-platform = org.hibernate.dialect.H2Dialect

# ??????????????????????????????????????????????????????????????
#  H2-konsoli (tarvittaessa selaimessa osoitteessa /h2)
# ??????????????????????????????????????????????????????????????
# spring.h2.console.enabled = true
# spring.h2.console.path    = /h2

# ??????????????????????????????????????????????????????????????
#  Spring Security + Vaadin
# ??????????????????????????????????????????????????????????????
# Vaadinin logout-linkki osoittaa /logout
server.servlet.context-path = /

# (I18N-provider vain jos olet sellaisen toteuttanut)
# vaadin.i18nProvider = com.example.application.i18n.MyI18NProvider
